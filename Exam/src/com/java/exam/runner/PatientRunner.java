package com.java.exam.runner;

import com.java.exam.internal.hosptl.DigitalRecordable;
import com.java.exam.external.Patient;

public class PatientRunner {
    public static void main(String[] args) {

        System.out.println("Using the interface reference (DigitalRecordable)");

        System.out.println("---------------------------------------------");


        DigitalRecordable digitalRecordable = new Patient();

        digitalRecordable.createRecord();
        digitalRecordable.updateRecord();
        digitalRecordable.deleteRecord();
        digitalRecordable.fetchRecord();
        digitalRecordable.archiveRecord();
        digitalRecordable.shareRecord();
        digitalRecordable.signRecord();
        digitalRecordable.encryptRecord();
        digitalRecordable.decryptRecord();
        digitalRecordable.generateStats();
        digitalRecordable.logMetrics();
        digitalRecordable.trackOutcomes();
        digitalRecordable.visualizeTrends();
        digitalRecordable.exportData();
        digitalRecordable.importData();
        digitalRecordable.anonymizeRecords();
        digitalRecordable.notifyStakeholders();
        digitalRecordable.refineModels();
        digitalRecordable.registerPatient();
        digitalRecordable.updateDetails();
        digitalRecordable.receiveEmergency();
        digitalRecordable.alertER();
        digitalRecordable.assignDoctor();
        digitalRecordable.prepOR();
        digitalRecordable.notifyRelatives();
        digitalRecordable.logCase();
        digitalRecordable.followUpCare();
        digitalRecordable.manageFiles();
        digitalRecordable.logSymptoms();
        digitalRecordable.scheduleFollowUp();
        digitalRecordable.linkInsurance();
        digitalRecordable.prepareDischarge();
        digitalRecordable.updateRecords();
        digitalRecordable.notifyFamily();
        digitalRecordable.printIDCard();
        digitalRecordable.fetchData();
        digitalRecordable.pushUpdates();
        digitalRecordable.logSync();
        digitalRecordable.handleConflict();
        digitalRecordable.clearCache();
        digitalRecordable.retrySync();
        digitalRecordable.verifyData();
        digitalRecordable.notifyAdmin();
        digitalRecordable.runDiagnostics();
        digitalRecordable.manageDepartments();
        digitalRecordable.hireStaff();
        digitalRecordable.reviewBudget();
        digitalRecordable.maintainFacilities();
        digitalRecordable.conductAudits();
        digitalRecordable.manageInventory();
        digitalRecordable.enforcePolicy();
        digitalRecordable.analyzeReports();
        digitalRecordable.scheduleMeetings();
        digitalRecordable.verifyInsurance();
        digitalRecordable.processClaim();
        digitalRecordable.contactProvider();
        digitalRecordable.generateInsuranceReport();
        digitalRecordable.updatePolicy();
        digitalRecordable.rejectClaim();
        digitalRecordable.approveClaim();
        digitalRecordable.assignShifts();
        digitalRecordable.logAttendance();
        digitalRecordable.handlePatients();
        digitalRecordable.reportToDoctor();
        digitalRecordable.assistInSurgery();
        digitalRecordable.monitorEquipment();
        digitalRecordable.trainNurses();
        digitalRecordable.dispatchAmbulance();
        digitalRecordable.trackAmbulance();
        digitalRecordable.logTrip();
        digitalRecordable.alertHospital();
        digitalRecordable.receivePatient();
        digitalRecordable.refuelAmbulance();
        digitalRecordable.maintainVehicle();
        digitalRecordable.assignBed();
        digitalRecordable.releaseBed();
        digitalRecordable.updateBedStatus();
        digitalRecordable.sanitizeBed();
        digitalRecordable.logBedUsage();
        digitalRecordable.viewBedOccupancy();
        digitalRecordable.notifyWard();
        digitalRecordable.scheduleConsultation();
        digitalRecordable.consultPatient();
        digitalRecordable.logConsultation();
        digitalRecordable.updateTreatment();
        digitalRecordable.followUp();
        digitalRecordable.inspectEquipment();
        digitalRecordable.performMaintenance();
        digitalRecordable.logIssues();
        digitalRecordable.requestParts();
        digitalRecordable.shutdownDevice();
        digitalRecordable.checkStock();
        digitalRecordable.dispenseMedicine();
        digitalRecordable.addInventory();
        digitalRecordable.removeExpired();
        digitalRecordable.generateReport();
        digitalRecordable.trackVitals();
        digitalRecordable.monitorMovement();
        digitalRecordable.logChanges();
        digitalRecordable.alertNurse();
        digitalRecordable.updateDashboard();
        digitalRecordable.createSchedule();
        digitalRecordable.reschedule();
        digitalRecordable.cancelAppointment();
        digitalRecordable.sendReminder();
        digitalRecordable.viewSchedule();
        digitalRecordable.sendAlert();
        digitalRecordable.logNotification();
        digitalRecordable.notifyDoctor();
        digitalRecordable.collectSample();
        digitalRecordable.analyzeSample();
        digitalRecordable.storeResults();
        digitalRecordable.setupSurgery();
        digitalRecordable.performSurgery();
        digitalRecordable.sterilizeEquipment();
        digitalRecordable.admitPatient();
        digitalRecordable.performDiagnosis();
        digitalRecordable.scanPatient();
        digitalRecordable.Bill();
        digitalRecordable.processPayment();
        digitalRecordable.printReceipt();
        digitalRecordable.branch();
        digitalRecordable.owner();

        System.out.println("---------------------------------------------");


        System.out.println(" Using the Patient class reference");

        System.out.println("---------------------------------------------");

        Patient patient = new Patient();


        patient.createRecord();
        patient.updateRecord();
        patient.deleteRecord();
        patient.fetchRecord();
        patient.archiveRecord();
        patient.shareRecord();
        patient.signRecord();
        patient.encryptRecord();
        patient.decryptRecord();
        patient.generateStats();
        patient.logMetrics();
        patient.trackOutcomes();
        patient.visualizeTrends();
        patient.exportData();
        patient.importData();
        patient.anonymizeRecords();
        patient.notifyStakeholders();
        patient.refineModels();
        patient.registerPatient();
        patient.updateDetails();
        patient.receiveEmergency();
        patient.alertER();
        patient.assignDoctor();
        patient.prepOR();
        patient.notifyRelatives();
        patient.logCase();
        patient.followUpCare();
        patient.manageFiles();
        patient.logSymptoms();
        patient.scheduleFollowUp();
        patient.linkInsurance();
        patient.prepareDischarge();
        patient.updateRecords();
        patient.notifyFamily();
        patient.printIDCard();
        patient.fetchData();
        patient.pushUpdates();
        patient.logSync();
        patient.handleConflict();
        patient.clearCache();
        patient.retrySync();
        patient.verifyData();
        patient.notifyAdmin();
        patient.runDiagnostics();
        patient.manageDepartments();
        patient.hireStaff();
        patient.reviewBudget();
        patient.maintainFacilities();
        patient.conductAudits();
        patient.manageInventory();
        patient.enforcePolicy();
        patient.analyzeReports();
        patient.scheduleMeetings();
        patient.verifyInsurance();
        patient.processClaim();
        patient.contactProvider();
        patient.generateInsuranceReport();
        patient.updatePolicy();
        patient.rejectClaim();
        patient.approveClaim();
        patient.assignShifts();
        patient.logAttendance();
        patient.handlePatients();
        patient.reportToDoctor();
        patient.assistInSurgery();
        patient.monitorEquipment();
        patient.trainNurses();
        patient.dispatchAmbulance();
        patient.trackAmbulance();
        patient.logTrip();
        patient.alertHospital();
        patient.receivePatient();
        patient.refuelAmbulance();
        patient.maintainVehicle();
        patient.assignBed();
        patient.releaseBed();
        patient.updateBedStatus();
        patient.sanitizeBed();
        patient.logBedUsage();
        patient.viewBedOccupancy();
        patient.notifyWard();
        patient.scheduleConsultation();
        patient.consultPatient();
        patient.logConsultation();
        patient.updateTreatment();
        patient.followUp();
        patient.inspectEquipment();
        patient.performMaintenance();
        patient.logIssues();
        patient.requestParts();
        patient.shutdownDevice();
        patient.checkStock();
        patient.dispenseMedicine();
        patient.addInventory();
        patient.removeExpired();
        patient.generateReport();
        patient.trackVitals();
        patient.monitorMovement();
        patient.logChanges();
        patient.alertNurse();
        patient.updateDashboard();
        patient.createSchedule();
        patient.reschedule();
        patient.cancelAppointment();
        patient.sendReminder();
        patient.viewSchedule();
        patient.sendAlert();
        patient.logNotification();
        patient.notifyDoctor();
        patient.collectSample();
        patient.analyzeSample();
        patient.storeResults();
        patient.setupSurgery();
        patient.performSurgery();
        patient.sterilizeEquipment();
        patient.admitPatient();
        patient.performDiagnosis();
        patient.scanPatient();
        patient.Bill();
        patient.processPayment();
        patient.printReceipt();
        patient.branch();
        patient.owner();
    }
}
